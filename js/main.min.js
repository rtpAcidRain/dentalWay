"use strict";

var html = document.querySelector("html");
var modals,
  modalOpenButs,
  handleModalOpen,
  handleModalClose,
  modalSetTimeout,
  openedModal,
  header,
  MODAL_TIME = 400;
var defaultFractionPag = function defaultFractionPag(e) {
    return {
      el: e,
      type: "fraction",
      formatFractionCurrent: function formatFractionCurrent(e) {
        return ("0" + e).slice(-2);
      },
      formatFractionTotal: function formatFractionTotal(e) {
        return ("0" + e).slice(-2);
      },
      renderFraction: function renderFraction(e, o) {
        return "<span class=\"".concat(e, " text-text-d px-[4.5px]\"></span><span>|</span><span class=\"").concat(o, " text-text-at px-[4.5px]\"></span>");
      }
    };
  },
  documentHeight = function documentHeight() {
    document.documentElement.style.setProperty("--doc-height", window.innerHeight + "px");
  };
documentHeight(), window.addEventListener("resize", documentHeight), document.addEventListener("DOMContentLoaded", function () {
  modals = document.querySelectorAll(".modal"), modalOpenButs = document.querySelectorAll("[data-modal]");
  var e = document.querySelectorAll(".modal-close");
  handleModalOpen = function handleModalOpen(e, o) {
    clearTimeout(modalSetTimeout), openedModal = document.getElementById(e), o.dataset.modalScrollblock && html.classList.add("something-opened"), modals.forEach(function (o) {
      o.id === e && (o.classList.add("mounted"), o.classList.add("opened"));
    }), o.classList.add("modal-opened");
  }, handleModalClose = function handleModalClose(e, o, t) {
    var a = openedModal;
    openedModal = void 0, a.classList.remove("opened"), modalOpenButs.forEach(function (e) {
      e.dataset.modal === a.id && e.classList.remove("modal-opened");
    }), modalSetTimeout = setTimeout(function () {
      html.classList.remove("something-opened"), a.classList.remove("mounted"), e && e(o, t);
    }, MODAL_TIME);
  }, e.forEach(function (e) {
    e.addEventListener("click", function () {
      handleModalClose();
    });
  }), modals.forEach(function (e) {
    e.addEventListener("click", function () {
      handleModalClose();
    }), e.querySelector(".modal__container").addEventListener("click", function (e) {
      e.stopPropagation();
    });
  }), modalOpenButs.forEach(function (e) {
    e.addEventListener("click", function (o) {
      o.preventDefault(), e.classList.contains("modal-opened") ? handleModalClose() : openedModal ? handleModalClose(handleModalOpen, e.dataset.modal, e) : handleModalOpen(e.dataset.modal, e);
    });
  });
  document.querySelectorAll(".accardeon").forEach(function (e) {
    var o = e.querySelectorAll(":scope > .accardeon-item");
    o.forEach(function (e) {
      e.querySelector(".accardeon-item__but").addEventListener("click", function () {
        e.classList.contains("opened") ? e.classList.remove("opened") : (o.forEach(function (e) {
          e.classList.remove("opened");
        }), e.classList.add("opened"));
      });
    });
  });
  var o = document.querySelector(".header__top");
  var t = window.scrollY;
  window.innerWidth > 768 && document.addEventListener("scroll", function () {
    t = window.scrollY, t >= o.clientHeight ? html.classList.contains("header-close") || html.classList.add("header-close") : html.classList.contains("header-close") && html.classList.remove("header-close");
  });
  document.querySelectorAll(".navigation-on-site").forEach(function (e) {
    var o = e.querySelectorAll(".navigation-on-site__el");
    function t() {
      o.forEach(function (e) {
        e.classList.remove("opened");
      });
    }
    o.forEach(function (e) {
      var o = e.querySelector(".navigation-on-site__but"),
        a = e.querySelector(".navigation-on-site__body__heading__close");
      o.addEventListener("click", function () {
        e.classList.contains("opened") ? e.classList.remove("opened") : (t(), e.classList.add("opened"));
      }), a && a.addEventListener("click", function () {
        t();
      });
    });
  });
  document.querySelectorAll(".tabs").forEach(function (e) {
    e.style.gridTemplateColumns = "repeat(".concat(e.querySelectorAll(".tab").length, ", minmax(0, 1fr))");
  });
});