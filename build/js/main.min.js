"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e5) { throw _e5; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e6) { didErr = true; err = _e6; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var html = document.querySelector("html");
var modals,
  modalOpenButs,
  handleModalOpen,
  handleModalClose,
  modalSetTimeout,
  openedModal,
  header,
  reviewImagesSliderConfig,
  openVideo,
  MODAL_TIME = 400;
var defaultFractionPag = function defaultFractionPag(e) {
  return {
    el: e,
    type: "fraction",
    formatFractionCurrent: function formatFractionCurrent(e) {
      return ("0" + e).slice(-2);
    },
    formatFractionTotal: function formatFractionTotal(e) {
      return ("0" + e).slice(-2);
    },
    renderFraction: function renderFraction(e, t) {
      return "<span class=\"".concat(e, " text-text-d px-[4.5px]\"></span><span>|</span><span class=\"").concat(t, " text-text-at px-[4.5px]\"></span>");
    }
  };
};
function loadScript(e, t) {
  var o = document.createElement("script");
  o.type = "text/javascript", o.async = !0, o.defer = !0, o.readyState ? o.onreadystatechange = function () {
    "loaded" !== o.readyState && "complete" !== o.readyState || (o.onreadystatechange = null, t());
  } : o.onload = function () {
    t();
  }, o.src = e, document.getElementsByTagName("head")[0].appendChild(o);
}
var documentHeight = function documentHeight() {
  document.documentElement.style.setProperty("--doc-height", window.innerHeight + "px");
};
function ajaxForm(e, t) {
  e && e.addEventListener("submit", function (o) {
    o.preventDefault();
    var s = e.querySelectorAll(".input");
    if (!function () {
      if (!e.querySelector(".checkbox").checked) return !1;
      var t = /\+\d{1}\(\d{3}\)\d{3}-\d{2}-\d{2}/g;
      var o = !0;
      function n(e, t) {
        var o = document.createElement("div"),
          s = document.createTextNode(t);
        o.classList.add("input__errortext"), o.appendChild(s), e.appendChild(o);
      }
      return _toConsumableArray(s).forEach(function (e) {
        if (e.querySelector("input") && "file" !== e.querySelector("input").type) {
          var l = e.querySelector("input");
          e.classList.remove("error"), e.querySelector(".input__errortext") && e.querySelector(".input__errortext").remove(), l.value.length > 0 ? l.classList.contains("phone") && (s = l.value, o = !!t.test(s), o || (e.classList.add("error"), n(e, "Телефон введен неверно"))) : (e.classList.add("error"), n(e, "Поле должно быть заполнено"));
        }
        var s;
      }), !e.querySelector(".error");
    }()) return !1;
    e.getElementsByClassName("error-msg")[0].innerHTML = "";
    var n = new XMLHttpRequest();
    n.open("POST", t), n.onload = function () {
      if (200 != n.status) alert("\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD ".concat(n.status, ": ").concat(n.statusText));else {
        var t = JSON.parse(n.responseText);
        if (t.success) e.closest(".modal") ? e.closest(".modal").classList.add("success") : (handleModalOpen("formSuccess"), _toConsumableArray(s).forEach(function (e) {
          e.querySelector("input").value = "";
        }));else {
          var _o = "";
          for (var _e in t.errors) _o += t.errors[_e] + "<br>";
          e.getElementsByClassName("error-msg")[0].innerHTML = _o;
        }
      }
    }, n.onerror = function () {
      alert("������ �� ������");
    }, n.send(new FormData(e));
  });
}
function ChangeDoc(e) {
  for (var t = document.getElementsByClassName("DOCTOR_NAME"), o = 0; o < t.length; ++o) {
    t[o].value = e;
  }
}
function ChangeService(e) {
  for (var t = document.getElementsByClassName("SERVICE_NAME"), o = 0; o < t.length; ++o) {
    t[o].value = e;
  }
}
function ChangeClinic(e) {
  for (var t = document.getElementsByClassName("CLINIC_NAME"), o = 0; o < t.length; ++o) {
    t[o].value = e;
  }
}
documentHeight(), window.addEventListener("resize", documentHeight), document.addEventListener("DOMContentLoaded", function () {
  var _JSON$parse;
  modals = document.querySelectorAll(".modal"), modalOpenButs = document.querySelectorAll("[data-modal]");
  var e = document.querySelectorAll(".modal-close");
  handleModalOpen = function handleModalOpen(e, t) {
    clearTimeout(modalSetTimeout), openedModal = document.getElementById(e), modals.forEach(function (t) {
      t.id === e && (t.classList.add("mounted"), t.classList.add("opened"));
    }), html.classList.add("something-opened"), t && (void 0 !== t.dataset.modalEnablescroll && html.classList.remove("something-opened"), t.classList.add("modal-opened"), "mobileNav" === e && document.querySelectorAll('[data-modal="mobileNav"]').forEach(function (e) {
      return e.classList.add("modal-opened");
    }), t.dataset.modalName && openedModal.querySelector(".modal-form-title") && (openedModal.querySelector(".modal-form-title").innerHTML = t.dataset.modalName));
  }, handleModalClose = function handleModalClose(e, t, o) {
    var s = openedModal;
    openedModal = void 0, s.classList.remove("opened"), modalOpenButs.forEach(function (e) {
      e.dataset.modal === s.id && e.classList.remove("modal-opened");
    }), modalSetTimeout = setTimeout(function () {
      html.classList.remove("something-opened"), s.classList.remove("mounted"), e && e(t, o);
    }, MODAL_TIME);
  }, _toConsumableArray(e).forEach(function (e) {
    e.addEventListener("click", function (e) {
      e.preventDefault(), handleModalClose();
    });
  }), modals.forEach(function (e) {
    e.addEventListener("click", function () {
      handleModalClose();
    }), e.querySelector(".modal__container") && e.querySelector(".modal__container").addEventListener("click", function (e) {
      e.stopPropagation();
    });
  }), modalOpenButs.forEach(function (e) {
    e.addEventListener("click", function (t) {
      t.preventDefault(), e.classList.contains("modal-opened") ? handleModalClose() : openedModal ? handleModalClose(handleModalOpen, e.dataset.modal, e) : handleModalOpen(e.dataset.modal, e);
    });
  });
  var t = _toConsumableArray(document.querySelectorAll(".accardeon"));
  t.forEach(function (e) {
    var t = e.querySelectorAll(":scope > .accardeon-item");
    _toConsumableArray(t).forEach(function (o) {
      o.querySelector(".accardeon-item__but").addEventListener("click", function (s) {
        s.stopPropagation(), e.classList.add("sm-opened"), o.classList.contains("opened") ? (o.classList.remove("opened"), e.classList.remove("sm-opened")) : (t.forEach(function (e) {
          e.classList.remove("opened");
        }), o.classList.add("opened"));
      });
    }), e.addEventListener("click", function (e) {
      e.stopPropagation();
    });
  }), document.addEventListener("click", function () {
    t.forEach(function (e) {
      if (!e.classList.contains("static-list")) {
        _toConsumableArray(e.querySelectorAll(":scope > .accardeon-item")).forEach(function (e) {
          e.classList.remove("opened");
        }), e.classList.remove("sm-opened");
      }
    });
  });
  var o = document.querySelector(".header__top");
  var s = window.scrollY;
  function n() {
    s >= o.clientHeight ? html.classList.contains("header-close") || html.classList.add("header-close") : html.classList.contains("header-close") && html.classList.remove("header-close");
  }
  n(), document.addEventListener("scroll", function () {
    s = window.scrollY, n();
  }), reviewImagesSliderConfig = function reviewImagesSliderConfig(e) {
    return new Swiper(e.querySelector(".swiper"), {
      slidesPerView: "auto",
      spaceBetween: 12,
      touchMoveStopPropagation: !0,
      navigation: {
        nextEl: e.querySelector(".review-slider__button.next"),
        prevEl: e.querySelector(".review-slider__button.before")
      }
    });
  };
  document.querySelectorAll(".review-slider").forEach(function (e) {
    reviewImagesSliderConfig(e);
  });
  _toConsumableArray(document.querySelectorAll(".swiper-container")).forEach(function (e) {
    var _e$querySelector$data, _e$querySelector$data2, _e$querySelector$data3, _e$querySelector$data4, _e$querySelector$data5, _e$querySelector$data6;
    new Swiper(e.querySelector(".swiper"), {
      spaceBetween: (_e$querySelector$data = e.querySelector(".swiper").dataset.sliderSb) !== null && _e$querySelector$data !== void 0 ? _e$querySelector$data : 16,
      slidesPerView: (_e$querySelector$data2 = e.querySelector(".swiper").dataset.sliderSpv) !== null && _e$querySelector$data2 !== void 0 ? _e$querySelector$data2 : "auto",
      pagination: defaultFractionPag(e.querySelector(".swiper-controls .pagination")),
      autoHeight: "false" !== e.querySelector(".swiper").dataset.sliderAh,
      onAny: function onAny(e) {
        "paginationUpdate" !== e && "afterInit" !== e || this.pagination.el && (this.pagination.el.classList.contains("swiper-pagination-lock") ? this.el.closest(".swiper-container").classList.add("remove-pagination") : this.el.closest(".swiper-container").classList.remove("remove-pagination"));
      },
      navigation: {
        prevEl: e.querySelector(".swiper-controls .prev"),
        nextEl: e.querySelector(".swiper-controls .next")
      },
      breakpoints: {
        768: {
          slidesPerView: (_e$querySelector$data3 = e.querySelector(".swiper").dataset.sliderMdSpv) !== null && _e$querySelector$data3 !== void 0 ? _e$querySelector$data3 : 2,
          spaceBetween: (_e$querySelector$data4 = e.querySelector(".swiper").dataset.sliderMdSb) !== null && _e$querySelector$data4 !== void 0 ? _e$querySelector$data4 : 16
        },
        1366: {
          spaceBetween: (_e$querySelector$data5 = e.querySelector(".swiper").dataset.sliderXlSb) !== null && _e$querySelector$data5 !== void 0 ? _e$querySelector$data5 : 30,
          slidesPerView: (_e$querySelector$data6 = e.querySelector(".swiper").dataset.sliderXlSpv) !== null && _e$querySelector$data6 !== void 0 ? _e$querySelector$data6 : 3
        }
      }
    });
    if (e.classList.contains("swiper-with-count")) {
      e.querySelectorAll(".swiper-slide").forEach(function (e, t) {
        e.innerHTML += "<span class=\"absolute right-5 top-5 text-bg-white\" style='font-size: 38px; font-weight: 700; line-height: 42px; letter-spacing: 0.02em;' >0".concat(t + 1, "</span>");
      });
    }
  });
  _toConsumableArray(document.querySelectorAll(".sst")).forEach(function (e) {
    var t = e.querySelectorAll(".sst-tabs > *"),
      o = e.querySelectorAll(".sst-slides > *");
    t[0].classList.add("selected"), o[0].classList.add("selected"), _toConsumableArray(t).forEach(function (e, s) {
      e.addEventListener("click", function (e) {
        e.preventDefault();
        for (var _e2 = 0; _e2 < t.length; _e2++) t[_e2].classList.remove("selected"), o[_e2].classList.remove("selected");
        this.classList.add("selected"), o[s].classList.add("selected");
      });
    });
  });
  document.querySelectorAll(".navigation-on-site").forEach(function (e) {
    var t = e.querySelectorAll(".navigation-on-site__el");
    function o() {
      t.forEach(function (e) {
        e.classList.remove("opened");
      });
    }
    t.forEach(function (e) {
      var t = e.querySelector(".navigation-on-site__but"),
        s = e.querySelector(".navigation-on-site__body__heading__close");
      t.addEventListener("click", function () {
        e.classList.contains("opened") ? e.classList.remove("opened") : (o(), e.classList.add("opened"));
      }), s && s.addEventListener("click", function () {
        o();
      });
    });
  }), _toConsumableArray(document.querySelectorAll(".local-header-services-search")).forEach(function (e) {
    var t = e.querySelector(".local-header-services-search__form"),
      o = e.querySelector(".local-header-services-search__input"),
      s = _toConsumableArray(e.querySelectorAll(".navigation-on-site__body__list a")),
      n = e.querySelector(".local-header-services-search__result");
    t.addEventListener("submit", function (e) {
      e.preventDefault();
      var t = _toConsumableArray(s.filter(function (e) {
        return e.innerText.toLowerCase().includes(o.value.toLowerCase());
      }));
      t.length > 0 ? (n.innerHTML = "", t.forEach(function (e) {
        n.appendChild(e.cloneNode(!0));
      })) : n.innerHTML = '<span class="text-body1 text-el-it">Ничего не найдено</span>';
    });
  });
  var l = document.querySelectorAll(".tabs");
  var _iterator = _createForOfIteratorHelper(l),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _e4 = _step.value;
      _e4.style.gridTemplateColumns = "repeat(".concat(_e4.querySelectorAll(".tab").length, ", minmax(0, 1fr))");
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  (function () {
    var e, t, o, s, n, l, a, r, c, i;
    var _loop = function _loop() {
      var s = e[t].getElementsByTagName("select")[0];
      var u = s.hasAttribute("multiple");
      for (n = s.length, (l = document.createElement("DIV")).setAttribute("class", "select-selected"), (c = document.createElement("SPAN")).innerHTML = s.options[s.selectedIndex] ? s.options[s.selectedIndex].innerHTML : "Выбрать...", e[t].appendChild(l), l.appendChild(c), c.outerHTML += '<svg width=\'24px\' height="24px" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M3.96967 8.96967C4.26256 8.67678 4.73744 8.67678 5.03033 8.96967L12 15.9393L18.9697 8.96967C19.2626 8.67678 19.7374 8.67678 20.0303 8.96967C20.3232 9.26256 20.3232 9.73744 20.0303 10.0303L12.5303 17.5303C12.2374 17.8232 11.7626 17.8232 11.4697 17.5303L3.96967 10.0303C3.67678 9.73744 3.67678 9.26256 3.96967 8.96967Z"/></svg>', a = document.createElement("DIV"), i = document.createElement("DIV"), a.setAttribute("class", "select-items select-hide"), i.setAttribute("class", "select-items__items"), o = 0; o < n; o++) (r = document.createElement("DIV")).innerHTML = s.options[o].innerHTML, o === s.selectedIndex && r.setAttribute("class", "same-as-selected"), r.addEventListener("click", function (e) {
        var t, o, s, n, l, a, r;
        for (e.stopPropagation(), a = (n = this.parentNode.parentNode.parentNode.getElementsByTagName("select")[0]).length, l = this.parentNode.parentNode.previousSibling.querySelector("span"), o = 0; o < a; o++) if (n.options[o].innerHTML == this.innerHTML) {
          if (u) {
            for (n.options[o].selected ? (n.options[o].selected = !1, this.removeAttribute("class", "same-as-selected")) : (n.options[o].selected = !0, this.setAttribute("class", "same-as-selected")), l.innerHTML = "", t = 0; t < a; t++) n.options[t].selected && (l.innerHTML.length > 0 ? l.innerHTML = l.innerHTML + ", " + n.options[t].innerHTML : l.innerHTML = "" + n.options[t].innerHTML);
            l.innerHTML.length < 1 && (l.innerHTML = "Выбрать...");
            break;
          }
          for (n.selectedIndex = o, l.innerHTML = this.innerHTML, r = (t = this.parentNode.getElementsByClassName("same-as-selected")).length, s = 0; s < r; s++) t[s].removeAttribute("class");
          this.setAttribute("class", "same-as-selected");
          break;
        }
        this.closest(".off-submit") || u || this.closest("form").submit(), u || l.click();
      }), i.appendChild(r);
      e[t].appendChild(a), a.appendChild(i), l.addEventListener("click", function (e) {
        e.stopPropagation(), d(this), this.nextSibling.classList.toggle("select-hide"), this.classList.toggle("select-arrow-active");
      }), e[t].addEventListener("click", function (e) {
        e.stopPropagation();
      });
    };
    for (s = (e = document.getElementsByClassName("custom-select")).length, t = 0; t < s; t++) {
      _loop();
    }
    function d(e) {
      var t,
        o,
        s,
        n,
        l,
        a = [];
      for (t = document.getElementsByClassName("select-items"), o = document.getElementsByClassName("select-selected"), n = t.length, l = o.length, s = 0; s < l; s++) e == o[s] ? a.push(s) : o[s].classList.remove("select-arrow-active");
      for (s = 0; s < n; s++) a.indexOf(s) && t[s].classList.add("select-hide");
    }
    document.addEventListener("click", d);
  })();
  var a = document.querySelectorAll("[data-scrollto]"),
    r = document.querySelector(".header");
  a.forEach(function (e) {
    var t = e.dataset.scrollto;
    t && e.addEventListener("click", function (e) {
      e.preventDefault();
      var o = -r.clientHeight,
        s = document.getElementById(t).getBoundingClientRect().top + window.scrollY + o;
      window.scrollTo({
        top: s,
        behavior: "smooth"
      });
    });
  });
  _toConsumableArray(document.querySelectorAll(".phone")).forEach(function (e) {
    IMask(e, {
      mask: "+{7}(000)000-00-00"
    });
  }), openVideo = function openVideo(e) {
    var t = e;
    t.includes("/video/") && (t = t.replace("/video/", "/play/embed/"));
    document.getElementById("videoIframe").setAttribute("src", t), Fancybox.show([{
      src: "#videoIframe"
    }]);
  }, Fancybox.bind("[data-fancybox]", {
    contentClick: "toggleCover",
    Images: {
      Panzoom: {
        panMode: "mousemove",
        mouseMoveFactor: 1.1,
        mouseMoveFriction: .12
      }
    }
  });
  var c = document.querySelectorAll(".search-on-site-header"),
    i = document.querySelectorAll(".search-on-site-header input"),
    d = (_JSON$parse = JSON.parse(localStorage.getItem("searchHistory"))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [],
    u = document.getElementById("searchOnSiteInputHeader"),
    m = document.getElementById("headerClearHistorySearch"),
    p = document.getElementById("historySearch");
  for (var _e3 = d.length - 1; _e3 > d.length - 6; _e3--) if (_e3 >= 0) {
    var _t = document.createElement("button");
    _t.innerText = d[_e3], p.appendChild(_t);
  }
  _toConsumableArray(c).forEach(function (e, t) {
    e.addEventListener("submit", function () {
      i[t].value && (d.push(i[t].value), localStorage.setItem("searchHistory", JSON.stringify(d)));
    });
  }), m && m.addEventListener("click", function () {
    d.splice(0, d.length), localStorage.removeItem("searchHistory"), p.innerHTML = "";
  });
  _toConsumableArray(document.querySelectorAll(".insert-in-search > *")).forEach(function (e) {
    e.addEventListener("click", function () {
      u.value = e.innerHTML;
    });
  });
  var h = document.querySelectorAll(".btn-share"),
    v = window.location.href,
    f = document.title;
  _toConsumableArray(h).forEach(function (e) {
    navigator.share ? e.addEventListener("click", function () {
      navigator.share({
        title: f,
        url: v
      }).then(function () {
        console.log("Thanks for sharing!");
      })["catch"](console.error);
    }) : (e.remove(), console.log("Web Share API не поддерживается"));
  });
  _toConsumableArray(document.querySelectorAll(".CLINIC_NAME")).forEach(function (e) {
    v.includes("/solncevo/") ? e.value = "Солнцево" : v.includes("/podolsk/") ? e.value = "Подольск" : v.includes("/mytishchi/") && (e.value = "Мытищи");
  });
});